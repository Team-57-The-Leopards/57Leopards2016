// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef ROLLERS_H
#define ROLLERS_H
#include "Commands/Subsystem.h"
#include "WPILib.h"

/**
 *
 *
 * @author ExampleAuthor
 */
class Rollers: public Subsystem {
private:
	int internalState = 0;
	// It's desirable that everything possible is private except
	// for methods that implement subsystem capabilities
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	std::shared_ptr<CANTalon> motor1;
	//std::shared_ptr<CANTalon> motor2;
	std::shared_ptr<AnalogInput> frontRange;
	std::shared_ptr<AnalogInput> backRange;
	std::shared_ptr<DigitalInput> frontSwitch;
	std::shared_ptr<DigitalInput> backSwitch;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
public:
	Rollers();
	void InitDefaultCommand();
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
	void RunPrimary(double speed);
	bool GetFrontSwitch(void);
	bool GetBackSwitch(void);
	void SetIntakeState(int state);
	int  GetIntakeState(void);
};

#endif
